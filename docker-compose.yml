services:
  # PostgreSQL Database
  db:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_DB: opcha_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Rails API Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: build
    environment:
      RAILS_ENV: development
      RAILS_MASTER_KEY: cee83926d87d4995d2de9e8326c13737
      DB_NAME: opcha_development
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    volumes:
      - ./backend:/rails
      - bundle_cache:/usr/local/bundle
    ports:
      - "3001:80"
    depends_on:
      db:
        condition: service_healthy
    command: ["./bin/rails", "server", "-b", "0.0.0.0", "-p", "80"]

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://backend:80
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: ["npm", "run", "dev"]


volumes:
  postgres_data:
  bundle_cache:
  node_modules: