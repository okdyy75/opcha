steps:
  # Build backend image
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/opcha-backend:$COMMIT_SHA
      - -t
      - gcr.io/$PROJECT_ID/opcha-backend:latest
      - ./backend
    id: build-backend

  # Build frontend image
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/opcha-frontend:$COMMIT_SHA
      - -t
      - gcr.io/$PROJECT_ID/opcha-frontend:latest
      - ./frontend
    id: build-frontend

  # Push backend image
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/opcha-backend:$COMMIT_SHA
    id: push-backend
    waitFor: [build-backend]

  # Push frontend image
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/opcha-frontend:$COMMIT_SHA
    id: push-frontend
    waitFor: [build-frontend]

  # Deploy backend to Cloud Run
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
      - run
      - deploy
      - opcha-backend
      - --image=gcr.io/$PROJECT_ID/opcha-backend:$COMMIT_SHA
      - --region=$_REGION
      - --platform=managed
      - --allow-unauthenticated
      - --add-cloudsql-instances=$_CLOUDSQL_INSTANCE
      - --set-env-vars=RAILS_ENV=production,DATABASE_URL=$_DATABASE_URL,RAILS_MASTER_KEY=$_RAILS_MASTER_KEY
    id: deploy-backend
    waitFor: [push-backend]

  # Deploy frontend to Cloud Run
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
      - run
      - deploy
      - opcha-frontend
      - --image=gcr.io/$PROJECT_ID/opcha-frontend:$COMMIT_SHA
      - --region=$_REGION
      - --platform=managed
      - --allow-unauthenticated
      - --set-env-vars=NODE_ENV=production,NEXT_PUBLIC_API_URL=$_API_URL
    id: deploy-frontend
    waitFor: [push-frontend]

substitutions:
  _REGION: asia-east1 # 台湾リージョン
  _CLOUDSQL_INSTANCE: ${PROJECT_ID}:${_REGION}:opcha-db
  _DATABASE_URL: postgresql://${_DB_USER}:${_DB_PASSWORD}@/${_DB_NAME}?host=/cloudsql/${_CLOUDSQL_INSTANCE}
  _RAILS_MASTER_KEY: ${_RAILS_MASTER_KEY}
  _API_URL: https://opcha-backend-xxxxxx-an.a.run.app
  _DB_USER: postgres
  _DB_PASSWORD: ${_DB_PASSWORD}
  _DB_NAME: opcha_production

options:
  logging: CLOUD_LOGGING_ONLY